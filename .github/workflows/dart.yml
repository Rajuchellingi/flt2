name: Dart

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache CocoaPods files
        uses: actions/cache@v3
        with:
          path: |
            ~/.cocoaPods
            ~/Library/Caches/CocoaPods
            consumer-ui-app-main/ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            .dart_tool
            build
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.7'

      - name: Show repo and find pubspec(s) (debug)
        run: |
          pwd
          ls -la
          find . -maxdepth 6 -name pubspec.yaml -print

      - name: Install dependencies
        run: flutter pub get
        working-directory: consumer-ui-app-main

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Install and update CocoaPods
        run: |
          gem install cocoapods -N
          pod setup
        shell: bash

      - name: Clean build and pods
        run: |
          flutter clean
          rm -rf ios/Pods
          rm -rf ios/.symlinks
          rm -rf ios/Flutter/Flutter.framework
          rm -rf ios/Flutter/Flutter.podspec
          rm -rf ~/Library/Developer/Xcode/DerivedData
        working-directory: consumer-ui-app-main

      - name: Update Firebase SDK Version
        run: |
          cd ios
          echo "platform :ios, '14.0'" > Podfile.properties.json
          echo "firebase_analytics_version=10.7.0" >> Podfile.properties.json
        working-directory: consumer-ui-app-main

      - name: Prepare iOS build
        run: |
          flutter pub get
          cd ios
          rm -f Podfile.lock
          cat > Podfile << 'EOF'
          # Uncomment this line to define a global platform for your project
          platform :ios, '14.0'

          # CocoaPods analytics sends network stats synchronously affecting flutter build latency.
          ENV['COCOAPODS_DISABLE_STATS'] = 'true'

          project 'Runner', {
            'Debug' => :debug,
            'Profile' => :release,
            'Release' => :release,
          }

          def flutter_root
            generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
            unless File.exist?(generated_xcode_build_settings_path)
              raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
            end

            File.foreach(generated_xcode_build_settings_path) do |line|
              matches = line.match(/FLUTTER_ROOT\=(.*)/)
              return matches[1].strip if matches
            end
            raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
          end

          require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

          flutter_ios_podfile_setup

          target 'Runner' do
            use_frameworks!
            use_modular_headers!

            flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
          end

          post_install do |installer|
            installer.pods_project.targets.each do |target|
              flutter_additional_ios_build_settings(target)
              target.build_configurations.each do |config|
                config.build_settings['ENABLE_BITCODE'] = 'NO'
                config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
                # Add the following line for ARM64 compatibility
                config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
              end
            end
          end
          EOF
          pod repo update
          pod install --repo-update
        working-directory: consumer-ui-app-main
        shell: bash

      - name: Build iOS (no codesign)
        run: |
          flutter precache --ios
          flutter build ios --no-codesign --release
        working-directory: consumer-ui-app-main
        shell: bash
